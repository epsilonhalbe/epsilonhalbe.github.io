<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>bricolage - Posts tagged deu</title>
        <link>http://epsilonhalbe.github.io</link>
        <description><![CDATA[Personal blog of epsilonhalbe]]></description>
        <atom:link href="http://epsilonhalbe.github.io/tags/deu.xml" rel="self"
                   type="application/rss+xml" />
        <lastBuildDate>Tue, 24 Jun 2014 00:00:00 UT</lastBuildDate>
        <item>
    <title>Tiramisu</title>
    <link>http://epsilonhalbe.github.io/posts/2014-06-24-Tiramisu.html</link>
    <description><![CDATA[<h1 id="tiramisu">Tiramisu</h1>
<h2 id="personen">10 Personen</h2>
<blockquote>
<p>1 × Quimic Vanille</p>
<p>25 dag Mascarpone</p>
<p>15 dag Zucker</p>
<p>Erdbeerpago | Eiskaffeesackerl</p>
<p>1 kg Erdbeeren</p>
<p>Kokosflocken</p>
<p>1 Schlagobers</p>
<p>2 Packungen Biskotten</p>
<p>Rum</p>
</blockquote>
<p>Schlagobers + Zucker schlagen, Quimic beimengen, Mascarpone beimengen. Biskotten kurz in Rum + Pago (oder Kaffee) tunken, und abwechselnd mit Mascarpone, Erdbeeren in Lagen aufschichten.</p>
<p><strong>Alternativ</strong>: Erdbeeren durch Ananas ersetzen.</p>]]></description>
    <pubDate>Tue, 24 Jun 2014 00:00:00 UT</pubDate>
    <guid>http://epsilonhalbe.github.io/posts/2014-06-24-Tiramisu.html</guid>
</item>
<item>
    <title>Mohnstrudl</title>
    <link>http://epsilonhalbe.github.io/posts/2014-06-24-Mohnstrudl.html</link>
    <description><![CDATA[<h1 id="kranzkuchen-mohnstrudel">Kranzkuchen Mohnstrudel</h1>
<h2 id="teig">Teig</h2>
<blockquote>
<p>40 dag Mehl (glatt)</p>
<p>1 Pckg. Germ</p>
<p>10 dag Margarine</p>
<p>8 dag Staubzucker</p>
<p>2 Dotter</p>
<p>Vanillezucker</p>
<p>Rum</p>
<p>1/8 l Milch warm</p>
</blockquote>
<p>Milch, Rum, Vanillezucker, Margarine, Dotter wärmen (<em>Achtung nicht zu heiß!</em>) Mehl, Germ, Staubzucker vermengen, dann Milchgemisch hinzugeben und den Teig sorgfältig kneten.</p>
<h2 id="fülle">Fülle</h2>
<blockquote>
<p>1/8 l Milch warm</p>
<p>20 dag Mohn | Nüsse</p>
<p>5 dag Rosinen</p>
<p>10 dag Kristallzucker</p>
<p>1 Ei + restliches Eiklar</p>
<p>Zimt</p>
<p>Rum</p>
<p>Vanillezucker</p>
</blockquote>
<p>Milch, Rum, Zucker, Zimt, Rosinen erwärmen, Mohn hinzugeben und verrühren. Eier hinzugeben und ordentlich vermengen.</p>
<hr />
<p>Teig ausrollen mit Mohnmasse bestreichen, einrollen mit Ei bestreichen, Hagelzucker darüber streuen und einschneiden.</p>
<p>Bei 160°C im offenen Backrohr, dann 35 min geschlossen backen.</p>]]></description>
    <pubDate>Tue, 24 Jun 2014 00:00:00 UT</pubDate>
    <guid>http://epsilonhalbe.github.io/posts/2014-06-24-Mohnstrudl.html</guid>
</item>
<item>
    <title>Marillenknödel</title>
    <link>http://epsilonhalbe.github.io/posts/2014-06-24-Marillenkn%C3%B6del.html</link>
    <description><![CDATA[<h1 id="marillenknödel">Marillenknödel</h1>
<h2 id="teig">Teig</h2>
<blockquote>
<p>25 dag Topfen</p>
<p>6 dag Margarine</p>
<p>16 dag Mehl (griffig)</p>
<p>1 Ei</p>
<p>1 Prise Salz</p>
</blockquote>
<p>Zutaten vermengen und für 20-30 min kalt stellen.</p>
<h2 id="brösel">Brösel</h2>
<blockquote>
<p>10 dag Margarine</p>
<p>25 dag Brösel</p>
<p>25 dag Zucker</p>
</blockquote>
<p>Im Backrohr bei 160°C: Butter zerlassen, Zucker + Brösel hinzugeben (<em>Achtung brennt leicht an!</em>) regelmäßig vermischen; Gesamtdauer ca. 10 min!</p>
<h2 id="knödel">Knödel</h2>
<blockquote>
<p>10 Marillen</p>
<p>1 Einheit Topfenteig</p>
</blockquote>
<p>Topfenteig in flache Scheibe formen, Marille einlegen und mit Teig umwickeln. Wasser kochen Knödel 8-10 min kochen dann in Brösel wälzen</p>]]></description>
    <pubDate>Tue, 24 Jun 2014 00:00:00 UT</pubDate>
    <guid>http://epsilonhalbe.github.io/posts/2014-06-24-Marillenkn%C3%B6del.html</guid>
</item>
<item>
    <title>Cantucchini</title>
    <link>http://epsilonhalbe.github.io/posts/2014-06-24-Cantucchini.html</link>
    <description><![CDATA[<h1 id="cantucchini">Cantucchini</h1>
<blockquote>
<p>4 Eier</p>
<p>20 dag Zucker</p>
<p>15 dag Nüsse</p>
<p>15 dag Schokolade (gehackt)</p>
<p>Vanillezucker</p>
</blockquote>
<p>Zutaten vermengen und in 3 cm breite, 1 cm hohe Streifen auf Backpapier verteilen. Bei 180°C im Backrohr 20 - 25 min backen. Auskühlen lassen und in 1 cm breite Streifen schneiden.</p>]]></description>
    <pubDate>Tue, 24 Jun 2014 00:00:00 UT</pubDate>
    <guid>http://epsilonhalbe.github.io/posts/2014-06-24-Cantucchini.html</guid>
</item>
<item>
    <title>Gibt es ein Leben nach der Uni</title>
    <link>http://epsilonhalbe.github.io/posts/2014-05-28-Infoveranstaltung.html</link>
    <description><![CDATA[<h1 id="studis-life-after-uni">∀ Studis: ∃: Life after Uni ??</h1>
<h2 id="martin-heuschober">Martin Heuschober</h2>
<h2 id="mai-2014">28. Mai 2014</h2>
<p><a href="http://creativecommons.org/licenses/by-nc-sa/4.0/">CC-BY-NC-SA 4.0</a></p>
<h1 id="liebe-studentinnen-und-studenten-der-mathematik">Liebe Studentinnen und Studenten der Mathematik!</h1>
<p>Ich war am Montag 26.5.2014 zu Gast bei einer Infoveranstaltung, wo sich einerseits die diversen Forschungsgruppen/Schwerpunkte vorgestellt haben andererseits aber auch “fertige” Mathematiker, unter anderem auch ich. Da ich weiß, dass bei solchen Veranstaltungen nie alle Zeit haben, die gerne hingegangen wären, schreibe ich nun einige Gedanken zusammen. Ich schreib das ganze per ‘du’, weil es mir dann leichter fällt, mir vorzustellen ich bespräche das ganze mit jemandem.</p>
<h1 id="zusammenfassung">Zusammenfassung</h1>
<ul>
<li>Studiere Mathe - denn Mathe ist toll und lasst dir von keiner und keinem was anderes erzählen!</li>
<li>Studiere was DICH interessiert, weil es DICH interessiert und sei begeistert!</li>
<li>Bist du zu blöd für Mathe richtig unbegabt und alle anderen besser! Das denkt sich jeder und jede - ich kenne keinen Mathematiker oder Mathematikerin der/die sich nicht irgendwann sicher war Mathe ist das falsche Studium und alles hinschmeißen wollte, spätestens bei der XYZarbeit. <strong>HALTE DURCH!!</strong></li>
<li>Noten sind im Bewerbungsgespräch relativ irrelevant und auch für eine DoktorandInnenstelle eher sekundär, klar ein Durchschnitt von 4 in Algebra führt nicht zu einer guten Basis für eine Doktorarbeit in Gruppentheorie.</li>
</ul>
<h1 id="about-me">About Me</h1>
<p>Ich bin am 24. April 2013 mit dem Mathematik-Studium fertig geworden, habe mich die letzten 3-4 Jahre des Studiums mit Programmieren auseinander gesetzt, insbesondere eine Programmiersprache namens <a href="https://de.wikipedia.org/wiki/Haskell_(Programmiersprache)">Haskell</a> im Selbststudium gelernt. Wobei ich sagen muss, dass wenn du wirklich an der Diplomarbeit arbeiten willst das mit dem Programmiersprache lernen nicht zu empfehlen ist. Auch Haskell, eine Nischensprache, ist nicht zu empfehlen, wenn du schnell einen Job finden willst. Dann eher Java, C++ oder von mir aus auch Python oder Ruby.</p>
<h1 id="arbeitsloser-mathematiker">Arbeitsloser Mathematiker?</h1>
<p>Ich war im letzten Jahr nach Ende des Studiums noch in Frankreich und bin mit 24.November zurück nach Österreich gekommen - ohne Wohnung - ohne Job und das kurz vor Weihnachten! Mein Bruder hat mir geholfen einen Lebenslauf zu schreiben, weil der beim AMS arbeitet kann der das tausendmal besser als ich. Ich habe jeden Tag mindestens zehn Bewerbungen versandt und 10 Tage nach meiner Rückkehr das erste Bewerbungsgespräch gehabt und in Folge noch einige andere. Trotz Weihnachten (zwei Wochen keine Rückmeldungen) habe ich mit Anfang März bei meinem derzeitigen Arbeitgeber Terna zu arbeiten begonnen - lustigerweise bei dem Bewerbungsgespräch bei dem ich mir sicher war, dass ich es versemmelt hätte.</p>
<p>Das alles nicht weil ich supertoller Programmierer bin - sondern weil der Eindruck beim Bewerbungsgespräch, kommunikativ, kompetent und vor allem ehrlich war - ich hab nie gesagt ich wäre der OberJavaChecker, sondern ich habe Mathe gelernt und glaube alles notwendige in gegebener Zeit lernen zu können. Denn das ist das Rüstzeug egal ob Algebra-Zweig oder Finanzmathe, Geometrie etc. das du im Mathe Studium auch lernst.</p>
<p>Klar ist es von Vorteil wenn du schon eine Programmiersprache kannst - ich habe zwar hauptsächlich in diese Richtung gesorgt, für einige Jobs war aber nur Excel oder Office Kenntnisse notwendig. Mehr Info zu Programmieren gibt es weiter unten im Abschnitt “Wo kann man Programmieren lernen?”, speziell den Frauen unter uns möchte ich diesen Abschnitt ans Herz legen.</p>
<h1 id="hilfe-ich-muss-einen-job-finden">Hilfe ich muss einen Job finden!</h1>
<h2 id="connections-beziehungen-vitamin-b">Connections, Beziehungen, Vitamin-B</h2>
<p>Beziehungen sind dein Freund, jeder kennt irgendjemanden und es ist keine Schande zu fragen, ob jemand einen Arbeitnehmer sucht! Und keine Angst, dass du genommen wirst, nur weil du XYZ kennst. Ein Bewerbungsgespräch ist eine Gefälligkeit aber Eingestellt wirst du nur weil dein zukünftiger Chef oder Chefin das Vertrauen hat, dass du dem Job gewachsen bist.</p>
<h2 id="lebenslauf-und-motivationsschreiben">Lebenslauf und Motivationsschreiben</h2>
<p>Der Lebenslauf ist wichtig mit Foto in Österreich, in Frankreich oder USA ohne Foto, gegebenenfalls informieren. Der Lebenslauf soll MAXIMAL 2 Seiten haben - eher eine. Motivationsschreiben soll erklären warum du genau diesen Job willst und warum du der oder die Richtige für diesen bist.</p>
<p>Wer das nicht gut kann - Hilfe in Anspruch nehmen, das ist mir auch <strong>nicht</strong> leicht gefallen, meinen jüngeren Bruder zu fragen, aber da der beim AMS arbeitet kann der das Zeug besser als ich.</p>
<p>Wen kannst du Fragen, mein Bruder hat wahrscheinlich nicht für alle Zeit ;), aber es gibt auch andere Leute beim AMS! Ein Mail oder ein Anruf mit der Frage ob es die Möglichkeit gibt, dass dir jemand den Lebenslauf korrigiert kann nicht schaden. Ich habe bei jedem Interview gefragt ob es Verbesserungsvorschläge für mich beim Bewerbungsgespräch gibt und auch für den Lebenslauf.</p>
<h2 id="sprachen">Sprachen</h2>
<p>Englisch ist Grundvoraussetzung in jedem Job für den du dich bewirbst, es kann dir passieren, dass du im Bewerbungsgespräch auch Englisch sprechen musst. Bereite dich seelisch darauf vor.</p>
<h2 id="a-propos-vorbereiten">A propos Vorbereiten</h2>
<p>Etwas das ich nicht gewusst habe, wenn du für ein Jobinterview eingeladen wirst versuche ALLES was du über die Firma, deren Produkte und den in Frage kommenden Job in Erfahrung bringen kannst. Bei Personalvermittlern ist das nicht in dem Maße notwendig, dennoch eine gute Übung.</p>
<p>Vorbereitet will auch das Auftreten sein, Kleidung und Körperhygiene sind wichtig. Und das sag ich nicht einfach so, ich hab selber erst lernen müssen, dass gekämmt, aber gaanz anderes aussieht als das was sich da im Spiegel präsentiert, und man sich halt nicht nur einmal im Monat rasieren muss.</p>
<p>Auch fürs Anzug kaufen hab ich mir, jemand kompetenteren als mich geschnappt und da reicht nicht “schaut eh ok aus” sondern “das passt jetzt aber tipptopp”.</p>
<h2 id="wer-will-mich">Wer will mich?</h2>
<p>Wer sucht Mathematiker - klar Versicherungen und Banken sind der No-Brainer, sonst? Verlage, brauchen Mathematikerinnen und Mathematiker, das AIT, die Finanzmarktaufsicht, Softwareschmieden und Programmierer, Kreditkartenfirmen, Consulting Firmen, Pharmaunternehmen, Logistikunternehmen.</p>
<p>Was sagt dieses Internet ? - Ich habe immer auf drei verschiedenen Internetseiten gesucht: monster.at, stepstone.at und karriere.at; ein LinkedIn und xing Profil angelegt. Wenn du willst kannst du auch das Branchenbuch durchforsten - es gibt mehr Banken etc. als du dachtest.</p>
<p>Nicht entmutigen lassen, wenn die Leute perfekte ZinnsoldatInnen erwarten mit perfektem Lebenslauf mit Mindeststudiendauer, 16 Praktika und 5 Jahren Berufserfahrung - die wissen selber dass das eine Illusion ist. Zu deiner Info ich habe 10 Jahre lang studiert, was wichtig ist dass ich erklären kann warum das so lange gedauert hat.</p>
<p>Noten sind nicht irrelevant, aber bei weitem nicht das erste Kriterium warum du eingeladen wirst.</p>
<p>Was ich bei der Infoveranstaltung festgestellt habe, du hast jetzt die Freiheit welche Kleidung du tragen willst/kannst. Bei uns in der Firma herrscht ein Dresscode - keine T-Shirts, keine Jeans, keine Turnschuhe, im Kundenkontakt Anzug und Krawatte - ist neu für mich, aber man gewöhnt sich daran, außerdem sehe ich es so an, dass ich teilweise dafür bezahlt werde, dass ich diesen Dresscode erfülle.</p>
<p>So zu was erfreulicherem!</p>
<h1 id="wo-kann-man-programmieren-lernen">Wo kann man Programmieren lernen?</h1>
<p>Programmieren ist nicht schwer - das Rüstzeug:</p>
<ul>
<li>logisches Denken</li>
<li>ein Problem in Teilprobleme zu zerlegen</li>
<li>Abstraktion</li>
<li>Abstraktion</li>
<li>Abstraktion</li>
</ul>
<p>Hast du schon im Studium zur genüge gelernt. Die meisten Programmiersprachen sind ein bisschen Vokabeltraining und viel Übung.</p>
<h2 id="wo-bekommt-man-die">Wo bekommt man die?</h2>
<p>Üben kannst du entweder selber alleine im Kämmerlein oder in Gruppen. Und da Programmieren immer beliebter wird gibt es auf meetup.com einige die froh sind dir zu helfen - egal ob du blutige Anfängerin oder Anfänger oder schon Erfahrung hast aber gerne darüber reden möchtest so mit anderen Menschen in echt und so.</p>
<h2 id="for-the-ladies">For the Ladies</h2>
<p>Ich bin nicht der Meinung das Frauen schlechtere Programmiererinnen sind, das widerspricht 30 Jahren Erziehung und 30 Jahren Erfahrung, detto in der Mathematik. Aber ich muss sagen gefühlt 90% der Programmierer die ich getroffen habe sind “young white males”. Und wenn ich als Anfänger in einen Raum mit lauter Frauen komme, denke ich mir auch im besten Falle - MHMMMMM HALP! (Und ja ich habe das erlebt - an anderer Stelle zwar aber egal.) Darum gibt es eigene Gruppen für die Programmiererinnen oder die die es werden wollen.</p>
<ul>
<li><a href="http://www.meetup.com/PyLadies-Vienna/">meetup|PyLadies</a></li>
<li><a href="http://www.meetup.com/RailsBridge-Vienna/">meetup|RailsBridge</a></li>
</ul>
<p>Ha und jetzt rede ich so groß und toll daher, und muss feststellen dass Beide Gruppen mangels Interesse schon wieder eingeschlafen sind. Wobei ich da sofort was dran ändern möchte und auf meetup.com ein wenig anregen werde.</p>
<p>Warum “For the Ladies” - ich will mehr Vielfalt, wenn ich in der Arbeit schaue habe ich hauptsächlich Männer um mich, privat ist das halbwegs ausgeglichen und das fühlt sich bei weitem besser, da ausgewogener an.</p>
<h2 id="zurück-zur-übung">Zurück zur Übung</h2>
<p>Wo bekommt man diese Übung - im Internet gibt es Coding Challenges und Exercises - <a href="http://www.codingame.com/cg/">hier|codingame</a> (coding challenge ranging from easy to hard), - <a href="http://codingbat.com/">hier|coding bat</a> (basic exercises in java or python), - <a href="https://projecteuler.net/">hier|project euler</a> (mathy problems), - <a href="http://exercism.io/">hier|exercism.io</a> - <a href="http://typing.io/">hier|touch typing</a></p>
<p>Auch bei Informatik Instituten gibt es Übungsbeispiele man aber auch als Gast Vorlesungen hören; Viele (amerikanische) Unis bieten mittlerweile auch Video Lectures an bzw. gibt es Plattformen wie <a href="www.coursera.org">coursera</a> oder <a href="http://ocw.mit.edu/courses/intro-programming/">MIT|open university</a></p>
<ul>
<li><a href="http://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-00-introduction-to-computer-science-and-programming-fall-2008/video-lectures/">MIT|introduction to computer science and programming</a></li>
<li><a href="http://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-006-introduction-to-algorithms-fall-2011/lecture-videos/">MIT|introduction to algorithms</a></li>
<li><a href="http://www.youtube.com/results?search_query=sicp">Youtube|Structure and Interpretation of Computer Programs</a>/<a href="http://mitpress.mit.edu/sicp/">Buch|SICP</a> ist ein sehr guter Programmierkurs aus alten Tagen in dem LISP unterrichtet wird</li>
<li><a href="http://see.stanford.edu/see/lecturelist.aspx?coll=2d712634-2bf1-4b55-9a3a-ca9d470755ee">Stanford</a></li>
</ul>
<p>Andere Gruppen bei denen man vorbeischauen kann gibt es zur genüge die Atmosphäre ist freundlich und jeder und jede sind herzlich willkommen, keine (Programmier)Fragen sind fehl am Platz.</p>
<ul>
<li><a href="https://metalab.at/wiki/Lambdaheads">Lambdaheads</a> - eine Usergroup für funktionales Programmieren, die ich leite</li>
<li><a href="http://pyug.at/">Python User Group Austria</a></li>
<li><a href="http://vienna.pm.org/">Vienna Perl Community</a></li>
<li><a href="http://vienna-rb.at/">vienna.rb</a> - User Group for Viennese rubyists -</li>
<li><a href="http://www.meetup.com/viennajs/">meetup|vienna.js</a> - Javascript (Achtung hat nix mit Java zu tun)</li>
<li><a href="http://www.meetup.com/vienna-clojure/">meetup|clojure</a></li>
<li><a href="http://www.meetup.com/Vienna-BEAMers/">meetup|erlang</a></li>
<li><a href="http://www.meetup.com/scala-vienna/">meetup|scala</a></li>
<li><a href="http://www.meetup.com/viennaphp/">meetup|php</a></li>
<li><a href="http://www.meetup.com/dotNet-in-Vienna/">meetup|C#</a></li>
<li><a href="http://www.meetup.com/ViennaR/">meetup|R</a></li>
</ul>
<p>Auch das <a href="https://metalab.at">Metalab</a> ist ein Ort um sich mit Leuten zu unterhalten und neues zu lernen. Gute Gelegenheiten vorbeizuschauen sind Cryptoparties, wo Leute verschlüsseln lernen, und/oder Metadays, wo Leute vortragen, oder Karaokeparties, wo Leute (wer hätte es gedacht) singen. (mehr im <a href="https://metalab.at/calendar/">Eventkalender</a>).</p>
<p>Die Menschen dort sind freundlich und sehr sehr kompetent was die jeweiligen Spezialgebiete angeht, und von Profis lernt man am besten, und die wissen alle wie es ist in einem Gebiet nicht Profi zu sein!</p>
<p>Zu guter Letzt möchte ich noch etwas zum Studium und der wissenschaftlichen Karriere sagen.</p>
<h1 id="wissenschaft-oder-wirtschaft">Wissenschaft oder Wirtschaft</h1>
<p>Egal wo du im Studium bist irgendwann stellt sich die Frage, will ich forschen oder möchte ich mich in der “richtigen” Welt beweisen. Die Antwort kann dir niemand geben was besser für dich ist. Für mich war es nach der Diplomarbeit klar, dass ich für diese Art zu Arbeiten jetzt nicht geeignet bin und ich mal was tun muss das weniger Theorie und mehr Praxis ist.</p>
<h2 id="master-of-the-universe">Master of the Universe</h2>
<p>Wenn du noch den Bachelor vor dir hast oder gerade fertig bist und dich fragst: Hmm - Zahlt sich ein Master aus? Bin ich gut genug? Will ich bleiben oder nicht?</p>
<p>Meiner Meinung nach bist du immer gut genug, oder wirst es sein wenn du den Master in der Tasche hast. Warum ? Es gibt mindestens ein Proseminar in dem du gut warst, das dir leicht gefallen ist oder du dich richtig reingekniet hast. Oder die Vorlesung wo du noch extra Zeug wissen wolltest und dich gefragt hast wo das wohl weiter geht. Wenn nicht dann gibt es noch so vieles was du nicht gesehen hast was dir den Kopf verdreht und in das du dich verlieben könntest. Und darum solltest du den Master machen - wenn du es dir irgendwie leisten kannst, der Prof. Haslinger hat von Stipendien gesprochen (die lieben Leute von der <a href="http://rotervektor.blogspot.co.at/">Studierendenvertretung</a> wissen da mehr). Man kann nebenbei Arbeiten - auch wenn das die Studiendauer signifikant erhöht.</p>
<p>Aber ich denke das ist der Master wert, das machst du nur für dich damit du noch einmal ganz tolle Sachen hörst und auch selber produzierst. Ein Bachelor ist nur die halbe Wahrheit ;-).</p>
<p>Wenn du trotzdem denkst das Bakk reicht - dann passt das so - wer bin ich der dir sagen kann/darf was gut für dich ist.</p>
<p>Wenn du dich doch für den Master entschieden hast dann steht irgendwann eine Frage im Raum.</p>
<h2 id="doktor-post-doc-professor-und-dann-die-weltherrschaft-aber-jetzt-wirklich">Doktor, Post-Doc, Professor und dann die Weltherrschaft aber jetzt wirklich</h2>
<p>Eine wissenschaftliche Karriere ist anstrengend, herausfordernd, bringt dich mehrfach an deine eigenen Grenzen aber ist eines der tollsten, befriedigendsten Erlebnisse die es gibt - ask a professor of your choice!</p>
<p>Ich selber hab die wissenschaftliche Luft nur am Rande kennengelernt, kann aber sehr gut nachvollziehen was für einen Reiz Forschung und Lehre haben.</p>
<p>Wenn du jetzt noch Fragen hast - schreib mir eine Email, frag die Leute von der <a href="http://rotervektor.blogspot.co.at/">Studierendenvertretung</a>, einen Freund oder Freundin, Professor oder Kollegen.</p>
<p>Dein Martin Heuschober</p>]]></description>
    <pubDate>Wed, 28 May 2014 00:00:00 UT</pubDate>
    <guid>http://epsilonhalbe.github.io/posts/2014-05-28-Infoveranstaltung.html</guid>
</item>
<item>
    <title>Ein bisschen wie LEGO<sup>®</sup></title>
    <link>http://epsilonhalbe.github.io/posts/2014-05-10-LikeLegos.html</link>
    <description><![CDATA[<!--
<link rel="stylesheet" href="highlight.js/styles/solarized_light.css">
 <link rel="stylesheet" href="reveal.js/css/reveal.css"/>
<script src="highlight.js/highlight.pack.js"></script>
<script>hljs.initHighlightingOnLoad();</script>
-->

<h1 id="intro">Intro</h1>
<h2 id="warum-haskell-wie-lego">Warum Haskell wie Lego?</h2>
<p>Beim Vorbereiten meines Vortrags habe ich überlegt wie ich Leuten so etwas abstraktes wie Haskell erkläre, ohne dass ich Programmierkenntnisse voraussetze. Dabei ist mir beim Thema “Immutability” eine Stelle aus “Sophies Welt” eingefallen, in der das griechische Atommodell mit Lego verglichen wurde. Ausgehend von dieser Idee sind mir immer mehr Parallelen zwischen diesen beiden Dingen eingefallen und ihr müsst euch den Blödsinn jetzt anhören.</p>
<h2 id="schlagwörter">Schlagwörter</h2>
<ul>
<li>Pure</li>
<li>Stark typisiert</li>
<li>Statisch typisiert</li>
<li>Lazy</li>
<li>Funktional</li>
</ul>
<h1 id="haskell-ist-pure">Haskell ist “pure”</h1>
<h2 id="pure">Pure</h2>
<p>Wie auch Legosteine sind Haskell Variablen unveränderlich, wer einen Baustein anderer Form/Farbe benötigt muss den alten wegwerfen (Garbage-Collecten) und einen neuen Baustein suchen/eine neue Instanz erzeugen.</p>
<p>Das heißt auch, dass Konstrukte und Abstraktionen anderer Programmiersprachen wie <code>for</code>-Schleifen oder <code>x++</code> nicht existieren.</p>
<h2 id="wie-löst-man-ebendiese-probleme">Wie löst man ebendiese Probleme?</h2>
<ul>
<li>Rekursion</li>
<li>Higher-Order-Functions</li>
<li>lokalen Variablen</li>
<li>Datenstrukturen wie Listen, Bäumen etc.</li>
</ul>
<h1 id="haskell-ist-stark-typisiert">Haskell ist stark typisiert</h1>
<h2 id="stark-typisiert">Stark typisiert</h2>
<p>So wie jeder Legostein eine fixe Länge, Breite und Farbe hat, so besitzt alles in Haskell einen Typ. <code>Lego (1 × 4) Red</code> ist vom Typ Lego (geschrieben <code>:: Lego</code>). Diese Typen werden vom Compiler überprüft, d.h. wo in meinem Quellcode ein <code>Lego</code> erwartet wird kann ich keinen <code>Duplo</code> Baustein verwenden.</p>
<h2 id="beispiele">Beispiele</h2>
<p>Ein paar Beispiele die man am besten im Interpreter <code>ghci</code> ausprobiert. Also unter MSWindows <code>winghci.exe</code> ausführen oder unter Unix ein Terminal öffnen und <code>ghci</code> aufrufen.</p>
<hr />
<pre class="sourceCode haskell"><code class="sourceCode haskell"><span class="dt">Prelude</span><span class="fu">&gt;</span> <span class="kw">let</span> a <span class="fu">=</span> <span class="ch">&#39;a&#39;</span>
<span class="dt">Prelude</span><span class="fu">&gt;</span> <span class="fu">:</span><span class="kw">type</span> a
<span class="ot">a ::</span> <span class="dt">Char</span>
<span class="dt">Prelude</span><span class="fu">&gt;</span> <span class="kw">let</span> b <span class="fu">=</span> [<span class="ch">&#39;T&#39;</span>,<span class="ch">&#39;e&#39;</span>,<span class="ch">&#39;x&#39;</span>,<span class="ch">&#39;t&#39;</span>]
<span class="dt">Prelude</span><span class="fu">&gt;</span> <span class="fu">:</span>t b
<span class="ot">b ::</span> [<span class="dt">Char</span>]
<span class="dt">Prelude</span><span class="fu">&gt;</span> <span class="kw">let</span> c <span class="fu">=</span> <span class="st">&quot;Text&quot;</span>
<span class="dt">Prelude</span><span class="fu">&gt;</span> <span class="fu">:</span>t c
<span class="ot">c ::</span> [<span class="dt">Char</span>]
<span class="dt">Prelude</span><span class="fu">&gt;</span> b <span class="fu">==</span> c
<span class="dt">True</span>
<span class="dt">Prelude</span><span class="fu">&gt;</span> <span class="fu">:</span>t b <span class="fu">==</span> c
b <span class="fu">==</span><span class="ot"> c ::</span> <span class="dt">Bool</span></code></pre>
<h1 id="haskell-ist-statisch-typisiert">Haskell ist statisch typisiert</h1>
<h2 id="statisch-typisiert">Statisch typisiert</h2>
<p>Wo in anderen Programmiersprachen der Buchstabe <code>'a'</code> auch als Zahl verwendet werden kann und man <code>'a'+3</code> berechnen kann und <code>'d'</code> erwartet, erhält man in Haskell eine Fehlermeldung, dass der Operator <code>(+)</code> zwei Zahlen vom gleichen Typ erwartet.</p>
<hr />
<p>Auch die <code>putStrLn</code>-Funktion erwartet einen <code>String</code>, den sie auf der Kommandozeile ausgibt und macht <strong>keine</strong> implizite Umwandlung, d.h.</p>
<pre class="sourceCode haskell"><code class="sourceCode haskell"><span class="dt">Prelude</span><span class="fu">&gt;</span> putStrLn <span class="dv">3</span>
<span class="co">--lange Errormessage</span></code></pre>
<h2 id="alles-hat-einen-typ">Alles hat einen Typ</h2>
<p>Auch Funktionen haben einen und der wird in einer Datei z.B. <code>MyFile.hs</code> meistens dazugeschrieben:</p>
<pre class="sourceCode haskell"><code class="sourceCode haskell"><span class="ot">f ::</span> <span class="dt">Int</span> <span class="ot">-&gt;</span> <span class="dt">Int</span> <span class="ot">-&gt;</span> <span class="dt">Int</span>
f x y <span class="fu">=</span> <span class="dv">2</span> <span class="fu">*</span> x <span class="fu">+</span> y</code></pre>
<ul>
<li><code>f :: Int -&gt; Int -&gt; Int</code><br> heißt: <code>f</code> nimmt einen <code>Int</code> und auch einen zweiten <code>Int</code> und liefert (das ist immer das letzte Dings in so einer Zeile) einen <code>Int</code></li>
<li>man verwendet Klammern nur da wo sie notwendig sind</li>
</ul>
<h2 id="eigene-typen">Eigene Typen</h2>
<p>Haskell erlaubt es auch sich eigene Typen auszudenken.</p>
<pre class="sourceCode haskell"><code class="sourceCode haskell"><span class="kw">data</span> <span class="dt">Color</span> <span class="fu">=</span> <span class="dt">Black</span> <span class="fu">|</span> <span class="dt">Red</span>     <span class="fu">|</span> <span class="dt">Green</span> <span class="fu">|</span> <span class="dt">Yellow</span>
           <span class="fu">|</span> <span class="dt">Blue</span>  <span class="fu">|</span> <span class="dt">Magenta</span> <span class="fu">|</span> <span class="dt">Cyan</span>  <span class="fu">|</span> <span class="dt">White</span>
<span class="kw">data</span> <span class="dt">Dimension</span> <span class="fu">=</span> <span class="dt">Dim</span> {<span class="ot">x ::</span> <span class="dt">Int</span>,<span class="ot"> y ::</span> <span class="dt">Int</span>}
<span class="kw">data</span> <span class="dt">Lego</span> <span class="fu">=</span> <span class="dt">Lego</span> {<span class="ot">dim ::</span> <span class="dt">Dimension</span>,<span class="ot"> color ::</span> <span class="dt">Color</span>}</code></pre>
<h1 id="haskell-ist-funktional">Haskell ist funktional</h1>
<h2 id="funktional">Funktional</h2>
<p>Funktionen haben keinen besonderen Status, man kann sie wie jeden anderen Typ in Variablen speichern, in Listen packen oder als Parameter in anderen Funktionen verwenden.</p>
<h2 id="wtf-ist-funktional-in-lego">WTF ist Funktional in LEGO</h2>
<p>Baupläne! Baupläne sind genauso wie Haskell-Funktionen, immer gleich. Soll heißen wenn ich einen Bauplan zwei mal hintereinander ausführe kommt das geiche Modell heraus bzw. bei Haskell der gleiche Wert.</p>
<p>Weiters werden in Baupläne kleine Teilbaupläne verwendet - auch in Haskell-Funktionen werden kleinere Funktionen als “Bausteine” verwendet.</p>
<h2 id="beispiele-1">Beispiele</h2>
<pre class="sourceCode haskell"><code class="sourceCode haskell"><span class="dt">Prelude</span><span class="fu">&gt;</span> <span class="kw">let</span> a x <span class="fu">=</span> <span class="dv">10</span><span class="fu">*</span>x
<span class="dt">Prelude</span><span class="fu">&gt;</span> a <span class="dv">10</span>
<span class="dv">100</span>
<span class="dt">Prelude</span><span class="fu">&gt;</span> <span class="kw">let</span> b <span class="fu">=</span> (<span class="fu">+</span>)
<span class="dt">Prelude</span><span class="fu">&gt;</span> b <span class="dv">1</span> <span class="dv">2</span>
<span class="dv">3</span>
<span class="dt">Prelude</span><span class="fu">&gt;</span> <span class="kw">let</span> c <span class="fu">=</span> \x <span class="ot">-&gt;</span> x<span class="fu">*</span><span class="dv">2</span>
<span class="dt">Prelude</span><span class="fu">&gt;</span> c <span class="dv">1</span>
<span class="dv">2</span>
<span class="dt">Prelude</span><span class="fu">&gt;</span> <span class="kw">let</span> d <span class="fu">=</span> \x y <span class="ot">-&gt;</span> x<span class="fu">*</span>y
<span class="dt">Prelude</span><span class="fu">&gt;</span> d <span class="dv">2</span> <span class="dv">3</span>
<span class="dv">6</span></code></pre>
<h1 id="haskell-ist-lazy">Haskell ist “lazy”</h1>
<h2 id="lazy">Lazy</h2>
<p>So wie beim Bau eines Lego-Hauses, wo ich ein Bauteil erst dann suche wenn ich es benötige, wird auch in Haskell Zeug erst dann ausgewertet wenn es gebraucht wird.</p>
<hr />
<pre class="sourceCode haskell"><code class="sourceCode haskell"><span class="dt">Prelude</span><span class="fu">&gt;</span> <span class="kw">let</span> a <span class="fu">=</span> <span class="dv">3</span>
<span class="dt">Prelude</span><span class="fu">&gt;</span> <span class="fu">:</span>sprint a
a <span class="fu">=</span> <span class="dv">3</span>
<span class="dt">Prelude</span><span class="fu">&gt;</span> <span class="kw">let</span> b <span class="fu">=</span> [<span class="dv">1</span><span class="fu">..</span><span class="dv">10</span>]
<span class="dt">Prelude</span><span class="fu">&gt;</span> <span class="fu">:</span>sprint b
b <span class="fu">=</span> _
<span class="dt">Prelude</span><span class="fu">&gt;</span> <span class="kw">let</span> c <span class="fu">=</span> map (<span class="fu">*</span><span class="dv">2</span>) b
<span class="dt">Prelude</span><span class="fu">&gt;</span> <span class="fu">:</span>sprint c
c <span class="fu">=</span> _
<span class="dt">Prelude</span><span class="fu">&gt;</span> length c
<span class="dt">Prelude</span><span class="fu">&gt;</span> <span class="fu">:</span>sprint b
b <span class="fu">=</span> [<span class="dv">1</span>,<span class="dv">2</span>,<span class="dv">3</span>,<span class="dv">4</span>,<span class="dv">5</span>,<span class="dv">6</span>,<span class="dv">7</span>,<span class="dv">8</span>,<span class="dv">9</span>,<span class="dv">10</span>]
<span class="dt">Prelude</span><span class="fu">&gt;</span> <span class="fu">:</span>sprint c
c <span class="fu">=</span> [_,_,_,_,_,_,_,_,_,_]</code></pre>
<h2 id="nochmal-lazyness-in-action">Nochmal lazyness in Action</h2>
<pre class="sourceCode haskell"><code class="sourceCode haskell"><span class="dt">Prelude</span><span class="fu">&gt;</span> <span class="kw">let</span> fib <span class="fu">=</span> <span class="dv">1</span><span class="fu">:</span><span class="dv">1</span><span class="fu">:</span>zipWith (<span class="fu">+</span>) fib (tail fib)
<span class="dt">Prelude</span><span class="fu">&gt;</span> take <span class="dv">10</span> fib
[<span class="dv">1</span>,<span class="dv">1</span>,<span class="dv">2</span>,<span class="dv">3</span>,<span class="dv">5</span>,<span class="dv">8</span>,<span class="dv">13</span>,<span class="dv">21</span>,<span class="dv">34</span>,<span class="dv">55</span>]</code></pre>
<h1 id="noch-einmal-legos">Noch einmal Legos</h1>
<h2 id="ghci">GHCi</h2>
<pre class="sourceCode bash"><code class="sourceCode bash">$<span class="kw">&gt;</span> <span class="kw">ghci</span> LikeLegos.hs</code></pre>
<pre class="sourceCode haskell"><code class="sourceCode haskell"><span class="kw">let</span> lego <span class="fu">=</span> <span class="dt">Lego</span> (<span class="dv">1</span>×<span class="dv">4</span>)
<span class="kw">let</span> colors <span class="fu">=</span> [<span class="dt">Black</span> <span class="fu">..</span> <span class="dt">White</span>]
map lego colors
pprint <span class="fu">$</span> map lego colors
pprint <span class="fu">$</span> map lego (colors <span class="fu">++</span> colors)
pprint <span class="fu">$</span> map lego (colors <span class="fu">++</span> reverse colors)
pprint <span class="fu">$</span> map lego (colors <span class="fu">++</span> tail (reverse colors))
<span class="kw">let</span> legos <span class="fu">=</span> map lego (colors <span class="fu">++</span> tail (reverse colors))</code></pre>
<hr />
<pre class="sourceCode haskell"><code class="sourceCode haskell">pprint <span class="fu">$</span> map (setX <span class="dv">2</span>) <span class="fu">$</span> legos&#39;
pprint <span class="fu">$</span> map (setColor <span class="dt">Red</span> <span class="fu">.</span> setX <span class="dv">2</span>) legos&#39;
pprint <span class="fu">$</span> zipWith setY [<span class="dv">1</span><span class="fu">..</span>] (map (setColor <span class="dt">Red</span>) legos&#39;)
pprint <span class="fu">$</span> zipWith setY ([<span class="dv">1</span><span class="fu">..</span><span class="dv">8</span>]<span class="fu">++</span>[<span class="dv">7</span>,<span class="dv">6</span><span class="fu">..</span><span class="dv">1</span>]) legos&#39;
pprint <span class="fu">$</span> zipWith setY (map (\x <span class="ot">-&gt;</span> <span class="dv">9</span><span class="fu">-</span>x) ([<span class="dv">1</span><span class="fu">..</span><span class="dv">8</span>]<span class="fu">++</span>[<span class="dv">7</span>,<span class="dv">6</span><span class="fu">..</span><span class="dv">1</span>])) legos&#39;</code></pre>
<h1 id="was-brauche-ich-zum-herumspielen">Was brauche ich zum herumspielen?</h1>
<h2 id="compiler">Compiler</h2>
<ul>
<li>Einen funktionierenden Compiler/Interpreter am besten Haskell-Platform <a href="http://www.haskell.org">herunterladen</a> und installieren</li>
<li>Compiler gibt es mehrere, der mit Abstand populärste ist GHC</li>
<li>Interpreter gibt es auch einige, aber außer GHCi sind alle veraltet</li>
</ul>
<h2 id="editor">Editor</h2>
<ul>
<li>Vim + Plugins (Syntastic, ghc-mod, haskellmode, hdevtools, lushtags)</li>
<li>Emacs + Plugins (ghc-mod)</li>
<li>Eclipse + EclipseFP</li>
<li>FPComplete hat einen online editor</li>
</ul>
<h2 id="bücher">Bücher</h2>
<ul>
<li><a href="http://learnyouahaskell.com">Learn you a haskell for great good</a> (short lyah)</li>
<li><a href="http://book.realworldhaskell.org/read/">Real World Haskell</a></li>
<li><a href="http://chimera.labs.oreilly.com/books/1230000000929/index.html">Parallel and Concurrent Programming in Haskell</a></li>
<li><a href="http://www.yesodweb.com/">Haskell and Yesod</a></li>
</ul>
<h2 id="blogs-podcasts">Blogs &amp; Podcasts</h2>
<ul>
<li><a href="http://planet.haskell.org/">Planet Haskell</a> eine Sammlung von aktuellen Blogartikeln</li>
<li><a href="http://www.reddit.com/r/haskell">Reddit</a></li>
<li><a href="http://www.haskellcast.com/">Haskellcast</a></li>
<li>haskell-cafe - mailinglist</li>
<li><a href="https://metalab.at/wiki/Lambdaheads">Lambdaheads</a></li>
</ul>
<h2 id="sonstige-tools">Sonstige Tools</h2>
<ul>
<li>HLint - ein ausgezeichnetes Tool das Codestyle verbessert</li>
<li><a href="http://hackage.haskell.org/">Hackage</a> - das zentrale Code-Repository</li>
<li>Cabal - der Paketmanager von Haskell</li>
<li>Hoogle - eine Suchmaschine die es ermöglicht nach Funktionen zu suchen</li>
<li>Hayoo - noch eine Suchmaschine, die noch mehr Pakete durchsucht</li>
<li><a href="http://stackoverflow.com/questions/tagged/haskell">www.stackoverflow.com</a></li>
</ul>]]></description>
    <pubDate>Sat, 10 May 2014 00:00:00 UT</pubDate>
    <guid>http://epsilonhalbe.github.io/posts/2014-05-10-LikeLegos.html</guid>
</item>

    </channel> 
</rss>
